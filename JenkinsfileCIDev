pipeline {
    agent any

    environment {
        KUBECONFIG = "/home/hongphuc/.kube/config"
        SERVICES = "spring-petclinic-vets-service,spring-petclinic-customers-service,spring-petclinic-visits-service,spring-petclinic-admin-server,spring-petclinic-api-gateway,spring-petclinic-config-server,spring-petclinic-genai-service,spring-petclinic-discovery-server"
        IMAGE_TAG = "latest"
    }

    stages {
        stage("Detect Changed Services") {
            steps {
                script {
                    sh 'git fetch origin main:refs/remotes/origin/main'
                    def changedFiles = sh(script: "git diff --name-only origin/main...", returnStdout: true).trim().split("\n")
                    def affected = []

                    env.SERVICES.split(',').each { service ->
                        if (changedFiles.find { it.startsWith(service + "/") }) {
                            affected.add(service)
                        }
                    }

                    if (affected.isEmpty()) {
                        echo "No services changed. Skipping build."
                        currentBuild.result = "SUCCESS"
                        return
                    }

                    env.BUILD_SERVICES = affected.join(',')
                }
            }
        }

        stage("Docker Login") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                    script { env.REPOSITORY_PREFIX = DOCKER_USER }
                }
            }
        }

        stage("Build & Push Images") {
            when { expression { return env.BUILD_SERVICES?.trim() } }
            steps {
                script {
                    env.BUILD_SERVICES.split(',').each { service ->
                        dir(service) {
                            sh "../mvnw install -DskipTests -P buildDocker"
                            sh "docker tag springcommunity/${service} ${REPOSITORY_PREFIX}/${service}:${IMAGE_TAG}"
                            sh "docker push ${REPOSITORY_PREFIX}/${service}:${IMAGE_TAG}"
                        }
                    }
                }
            }
        }
    }
}
