pipeline {
    agent any

    environment {
        // Hi again main is htis at
        IMAGE_TAG = "not new agian"
    }

    stages {
        stage("Checkout") {
            steps {
                checkout scm
            }
        }

        stage("Detect Tag") {
            steps {
                script {
                    def tag = sh(script: "git tag --points-at HEAD", returnStdout: true).trim()
                    if (!tag) {
                        echo "Not a tag-triggered build. Skipping..."
                        currentBuild.result = "SUCCESS"
                        return
                    }
                    env.IMAGE_TAG = tag
                }
            }
        }

        stage("Login Docker") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                    script { env.REPOSITORY_PREFIX = DOCKER_USER }
                }
            }
        }

        stage("Build & Push Images") {
            steps {
                script {
                    def services = [
                        "spring-petclinic-vets-service",
                        "spring-petclinic-customers-service",
                        "spring-petclinic-visits-service",
                        "spring-petclinic-admin-server",
                        "spring-petclinic-api-gateway",
                        "spring-petclinic-config-server",
                        "spring-petclinic-genai-service",
                        "spring-petclinic-discovery-server"
                    ]
                    sh './mvnw install -DskipTests -P buildDocker'
                    for (s in services) {
                        dir(s) {
                            sh "docker tag springcommunity/${s} ${env.REPOSITORY_PREFIX}/${s}:${env.IMAGE_TAG}"
                            sh "docker push ${env.REPOSITORY_PREFIX}/${s}:${env.IMAGE_TAG}"
                        }
                    }
                }
            }
        }
    }
}
